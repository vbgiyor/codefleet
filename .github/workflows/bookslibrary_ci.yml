name: BooksLibrary CI
on:
  push:
    branches: [main]
    paths:
      - 'python/django-framework/bookslibrary/**'
  pull_request:
    branches: [main]
    paths:
      - 'python/django-framework/bookslibrary/**'
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_HOST: postgresdb
      POSTGRES_DB: bookslab_db
      POSTGRES_USER: bookslab_user
      POSTGRES_PASSWORD: bookslab_password
      POSTGRES_PORT: 5432

    services:
      postgresdb:
        image: postgres:13
        env:
          POSTGRES_DB: bookslab_db
          POSTGRES_USER: bookslab_user
          POSTGRES_PASSWORD: bookslab_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U bookslab_user -d bookslab_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name postgresdb

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create Static Directory
        run: mkdir -p python/django-framework/bookslibrary/static

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/django-framework/bookslibrary/requirements.txt

      # - name: Wait for PostgreSQL
      #   run: |
      #     echo "Waiting for PostgreSQL to be ready..."
      #     for i in {1..30}; do
      #       pg_isready -h postgresdb -U bookslab_user -d bookslab_db -p 5432 && echo "PostgreSQL is ready!" && break
      #       echo "Waiting for PostgreSQL... Attempt $i/30"
      #       sleep 5
      #     done
      #     # Verify connectivity
      #     psql -h postgresdb -U bookslab_user -d bookslab_db -c "SELECT 1" || exit 1

      - name: Debug Docker Network and Container
        run: |
          echo "Listing Docker containers:"
          docker ps -a
          echo "Inspecting Docker network:"
          docker network ls
          docker network inspect $(docker network ls -q) || true
          echo "Checking postgresdb container logs:"
          docker logs postgresdb || true

      - name: Verify Environment Variables
        run: |
          echo "POSTGRES_HOST: $POSTGRES_HOST"
          echo "POSTGRES_DB: $POSTGRES_DB"
          echo "POSTGRES_USER: $POSTGRES_USER"
          echo "POSTGRES_PASSWORD: $POSTGRES_PASSWORD"
          echo "POSTGRES_PORT: $POSTGRES_PORT"

      - name: Run migrations
        run: |
          cd python/django-framework/bookslibrary
          python manage.py migrate

      - name: Run tests
        run: |
          cd python/django-framework/bookslibrary
          python manage.py test

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 python/django-framework/bookslibrary/bookslab --max-line-length=120 --exclude=migrations