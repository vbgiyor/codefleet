name: Website CI

on:
  push:
    branches: [main]
    paths:
      - 'website/**'
  pull_request:
    branches: [main]
    paths:
      - 'website/**'
  workflow_dispatch:

jobs:
  backend:
    runs-on: ubuntu-latest

    services:
      # PostgreSQL service for Django
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: codefleet_db
          POSTGRES_USER: codefleet_user
          POSTGRES_PASSWORD: codefleet_pass
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      # Redis service for Django
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('website/backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r website/backend/requirements.txt

      - name: Create log directories
        run: |
          mkdir -p ./logs
          mkdir -p ./logs_backup

      - name: Download frontend build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: website/frontend/build

      - name: Debug React build output
        working-directory: ./website/frontend
        run: |
          echo "Listing contents of website/frontend:"
          ls -la
          echo "Listing contents of website/frontend/build:"
          ls -la build || { echo "build directory not found; artifact download may have failed" >&2; exit 1; }
          if [ -d build ] && [ -f build/index.html ]; then
            echo "index.html found"
          else
            echo "index.html not found" >&2
            exit 1
          fi

      - name: Copy React build to backend
        run: |
          mkdir -p website/backend/frontend/build
          cp -r website/frontend/build/* website/backend/frontend/build/

      - name: Run migrations
        working-directory: ./website/backend
        env:
          DATABASE_URL: postgresql://codefleet_user:codefleet_pass@postgres:5432/codefleet_db
        run: |
          python manage.py migrate

      - name: Run Django tests
        working-directory: ./website/backend
        env:
          DATABASE_URL: postgresql://codefleet_user:codefleet_pass@postgres:5432/codefleet_db
          CI: true
        run: |
          python manage.py test

  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: website/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('website/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        working-directory: ./website/frontend
        run: npm install

      - name: Run React tests
        working-directory: ./website/frontend
        run: npm test -- --watchAll=false

      - name: Build React app
        working-directory: ./website/frontend
        run: |
          echo "Running npm run build..."
          npm run build || { echo "React build failed"; exit 1; }
          echo "Listing contents of build directory:"
          ls -la build
          echo "React build completed"

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: website/frontend/build/

  collect-static:
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('website/backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r website/backend/requirements.txt

      - name: Create log directories
        run: |
          mkdir -p ./logs
          mkdir -p ./logs_backup

      - name: Download frontend build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: website/frontend/build

      - name: Copy React build to backend
        run: |
          mkdir -p website/backend/frontend/build
          cp -r website/frontend/build/* website/backend/frontend/build/

      - name: Collect static files
        working-directory: ./website/backend
        run: |
          python manage.py collectstatic --noinput

      - name: List static files
        working-directory: ./website/backend
        run: |
          ls -la staticfiles/

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: static-files
          path: website/backend/staticfiles/