name: Website and CFInspector CI
description: |
  This workflow builds the Codefleet website (backend and frontend) and runs Selenium tests for the CFInspector project.
  It triggers on pushes and pull requests to the main branch for changes in the website or CFInspector directories,
  as well as manually via workflow_dispatch. The workflow runs on the latest Ubuntu environment, sets up PostgreSQL and Redis services, builds the Django backend and React frontend, and executes Selenium tests for CFInspector.

on:
  push:
    branches: [main]
    paths:
      - 'website/**'
      - 'automation/ui/selenium/java/CFInspector/**'
  pull_request:
    branches: [main]
    paths:
      - 'website/**'
      - 'automation/ui/selenium/java/CFInspector/**'
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: codefleet_db
          POSTGRES_USER: codefleet_user
          POSTGRES_PASSWORD: codefleet_pass
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for path filtering

    # Step 0: Get changed files
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v45
      with:
        files: |
          website/**
          automation/ui/selenium/java/CFInspector/**

    # Step 1: Install backend dependencies
    - name: Install backend dependencies
      if: steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
      run: |
        python -m pip install --upgrade pip
        pip install -r website/backend/requirements.txt

    # Step 2: Set up Node.js and install frontend dependencies
    - name: Set up Node.js
      if: steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install frontend dependencies
      if: steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
      working-directory: ./website/frontend
      run: npm install

    # Step 3: Run Selenium Tests (with continue-on-error: true)
    - name: Run Selenium tests for CFInspector (optional)
      if: steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
      working-directory: automation/ui/selenium/java/CFInspector
      run: |
        mvn clean test -Dtestng.xml=testng.xml -Dlogback.configurationFile=logback-test.xml
      env:
        BROWSER: chrome
        HEADLESS: true
        BASE_URL: http://localhost:8000
      continue-on-error: true  # This ensures the job continues even if the tests fail

    # Step 4: Upload TestNG reports
    - name: Upload TestNG reports
      if: always() && (steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch')
      uses: actions/upload-artifact@v4
      with:
        name: selenium-cfinspector-testng-reports
        path: automation/ui/selenium/java/CFInspector/target/surefire-reports/
        retention-days: 7

    # Step 5: Upload screenshots on failure
    - name: Upload screenshots
      if: failure() && (steps.changed-files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch')
      uses: actions/upload-artifact@v4
      with:
        name: selenium-cfinspector-screenshots
        path: automation/ui/selenium/java/CFInspector/target/screenshots/
        retention-days: 7
