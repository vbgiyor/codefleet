# Codefleet GitHub Actions workflow

name: CodeFleetCI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  selenium:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Chrome for headless testing
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Verify Maven project
        run: |
          echo "Listing pom.xml files:"
          find . -name pom.xml
          if [ -f modules/automation/src/PageInspector/pom.xml ]; then
            echo "Found pom.xml in modules/automation/src/PageInspector"
          else
            echo "No pom.xml found in modules/automation/src/PageInspector" >&2
            exit 1
          fi

      - name: Build and test Selenium
        working-directory: modules/automation/src/PageInspector
        run: mvn clean test -Dtestng.xml=testng.xml
        env:
          BROWSER: chrome
          HEADLESS: true

      - name: Upload TestNG reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: testng-reports
          path: modules/automation/src/PageInspector/target/surefire-reports/
          retention-days: 7

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: modules/automation/src/PageInspector/target/screenshots/
          retention-days: 7

  bookslibrary:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        working-directory: modules/python/src/django-rest-framework/bookslibrary
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found, installing django, pytest, and djangorestframework"
            pip install django>=4.2 djangorestframework>=3.15 pytest>=7.4 pytest-django>=4.5
          fi

      - name: Verify Django settings
        working-directory: modules/python/src/django-rest-framework/bookslibrary
        run: python manage.py check

      - name: Run Django migrations
        working-directory: modules/python/src/django-rest-framework/bookslibrary
        run: python manage.py migrate

      - name: Run Django tests
        working-directory: modules/python/src/django-rest-framework/bookslibrary
        run: python manage.py test

      - name: Upload Django test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bookslibrary-test-logs
          path: modules/python/src/django-rest-framework/bookslibrary/*.log
          retention-days: 7

  djangocommerce:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Debug project structure
        working-directory: modules/python/src/django-rest-framework/djangocommerce
        run: |
          echo "Listing djangocommerce directory:"
          ls -la
          if [ -f manage.py ]; then
            echo "manage.py found"
          else
            echo "manage.py not found" >&2
            exit 1
          fi
          if [ -f djangocommerce/settings.py ]; then
            echo "settings.py found, listing INSTALLED_APPS:"
            grep INSTALLED_APPS -A 10 djangocommerce/settings.py
          else
            echo "settings.py not found" >&2
            exit 1
          fi
          if [ -d users ]; then
            echo "users app directory found"
            ls -la users/
          else
            echo "users app directory not found"
          fi

      - name: Install Python dependencies
        working-directory: modules/python/src/django-rest-framework/djangocommerce
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found, installing django, pytest, and djangorestframework"
            pip install django>=4.2 djangorestframework>=3.15 pytest>=7.4 pytest-django>=4.5
          fi

      - name: Verify Django settings
        working-directory: modules/python/src/django-rest-framework/djangocommerce
        run: python manage.py check

      - name: Run Django migrations
        working-directory: modules/python/src/django-rest-framework/djangocommerce
        run: python manage.py migrate

      - name: Run Django tests
        working-directory: modules/python/src/django-rest-framework/djangocommerce
        run: python manage.py test

      - name: Upload Django test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: djangocommerce-test-logs
          path: modules/python/src/django-rest-framework/djangocommerce/*.log
          retention-days: 7
